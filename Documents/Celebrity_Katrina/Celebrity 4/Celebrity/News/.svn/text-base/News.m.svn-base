//
//  News.m
//  Celebrity
//
//  Created by JayaPrathap Audikesavalu on 13/02/12.
//  Copyright (c) 2012 __MyCompanyName__. All rights reserved.
//

#import "News.h"
#import "NewsDetailController.h"
#import "Constants.h"
#import "ServiceHandler.h"
#import "TableSubTitleItem.h"
#import "SharedObjects.h"
#import "NewsDataSource.h"
#import "DictionaryUtils.h"
#import "CelebrityAppDelegate.h"

@implementation News

@synthesize selectedNewsItem;
@synthesize newsDetailView;

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
   
    if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {
        
        self.title = @"News";
    }
    return self;
}

- (void) viewDidLoad {

    [super viewDidLoad];
    
    [[NSNotificationCenter defaultCenter] addObserver:self 
                                             selector:@selector(shareThis:) 
                                                 name:kshareNewsNotification 
                                               object:nil];
    
    [[NSNotificationCenter defaultCenter] addObserver:self 
                                             selector:@selector(tweetThis:) 
                                                 name:ktweetNewsNotification 
                                               object:nil];
    UIImageView *backgroundTwitter = [[UIImageView alloc] init];
    backgroundTwitter.frame = CGRectMake(0, 0, SCREENWIDTH, SCREENHEIGHT);
    
    if (UI_USER_INTERFACE_IDIOM()==UIUserInterfaceIdiomPad) {
        backgroundTwitter.image = [UIImage imageNamed:@"Twitterbg_ipad.png"];
        [self.tableView setFrame:CGRectMake(0, 0, [[UIScreen mainScreen] bounds].size.width, 
                                            [[UIScreen mainScreen] bounds].size.height-185)];
    }
    else {
        backgroundTwitter.image = [UIImage imageNamed:@"Twitterbg.png"];
        [self.tableView setFrame:CGRectMake(0, 0, [[UIScreen mainScreen] bounds].size.width, 
                                            [[UIScreen mainScreen] bounds].size.height-95)];
        
    }
    [self.view insertSubview:backgroundTwitter belowSubview:self.tableView];
    [backgroundTwitter release];
    
    [self.tableView setBackgroundColor:[UIColor clearColor]];
    
    [self.tableView setTableFooterView:[[[UIView alloc] initWithFrame:CGRectMake(0, 0, 0, 0)] autorelease]];
    
    self.variableHeightRows = YES;
    
    CelebrityAppDelegate *delegate = (CelebrityAppDelegate*)[[UIApplication sharedApplication] delegate];

    if ([delegate isNetworkAvailable]) {
        
        [delegate addLoadingView];
        
        ServiceHandler *service = [[ServiceHandler alloc] init];
        
        NSMutableDictionary *newsInfoDict = [[NSMutableDictionary alloc] init];
        [newsInfoDict setObject:kUserId forKey:kUserIdKey];
        
        [service callService:kNews withPostData:newsInfoDict callbackTarget:self callbackSelector:@selector(getNewsInfo:)];
        [service release];
        [newsInfoDict release];
    }
    else {
        
        // no network message
        UIAlertView *networkAlert1 = [[UIAlertView alloc] initWithTitle:nil 
                                                                message:kNoNetworkErr 
                                                               delegate:nil 
                                                      cancelButtonTitle:@"OK" 
                                                      otherButtonTitles:nil];
        
        [networkAlert1 show];
        
        [networkAlert1 release];
    }
}

-(void)getNewsInfo:(NSMutableDictionary*)newsDetailsResponse{
	
    CelebrityAppDelegate *delegate = (CelebrityAppDelegate*)[[UIApplication sharedApplication] delegate];

    [delegate removeLoadingView];
    
	if ([newsDetailsResponse objectForKey:@"error"]) {
        
        UIAlertView *alert=[[UIAlertView alloc]initWithTitle:nil message:kServiceDownMessage delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
        
        [alert show];
        
        [alert release]; 
    }
    else
    {
        NSString *status=[newsDetailsResponse objectForKey:@"status"];
        
        if([status isEqualToString:@"success"])
        {
            DictionaryUtils *dictUtils = [DictionaryUtils sharedInstance];
            
            if (nil != [[SharedObjects sharedInstance] newsArray]) {
                
                if ([[[SharedObjects sharedInstance] newsArray] count] > 0) {
                    
                    [[[SharedObjects sharedInstance] newsArray] removeAllObjects];
                }
            }
            
            if (nil != [newsDetailsResponse objectForKey:kData]) {
                
                if ([dictUtils dict:[newsDetailsResponse objectForKey:kData] hasKey:kimages]) {
                    
                    NSArray *imgArray = [[newsDetailsResponse objectForKey:kData] objectForKey:kimages];
                    
                    if (nil != imgArray) {
                        
                        if ([imgArray count] > 0) {
                            
                            for (int i = 0; i < [imgArray count]; i++) {
                                
                                NSDictionary *newsItemDict = [imgArray objectAtIndex:i];
                                
                                //2012-06-15 04:51:40
                                NSMutableString *dateString = nil;
                                NSMutableString *time = nil;
                                
                                if (nil != [newsItemDict objectForKey:@"created"]) {
                                    dateString = [newsItemDict objectForKey:@"created"]; 
                                    time = [[dateString componentsSeparatedByString:@" "] objectAtIndex:1];
                                }
                                else {
                                    dateString = [NSMutableString stringWithString:@""];
                                    time = [NSMutableString stringWithString:@""];
                                }
                                
                                // check for cron
                                if ([[newsItemDict objectForKey:kisCron] intValue] == 0) {
                                    
                                    [[[SharedObjects sharedInstance] newsArray] addObject:[TableSubTitleItem itemWithText:[newsItemDict objectForKey:knewsTitle] 
                                                                                     subtitle:[newsItemDict objectForKey:knewsDesc] 
                                                                                     thumbURL:[newsItemDict objectForKey:knewsThumbImageUrl] 
                                                                                     imageURL:[newsItemDict objectForKey:knewsDetailImageUrl] 
                                                                                          URL:[newsItemDict objectForKey:kMoreNewsUrl]
                                                                                         time:time
                                                                                         date:dateString]];
                                }
                                else {
                                    
                                    [[[SharedObjects sharedInstance] newsArray] addObject:[TableSubTitleItem itemWithText:[newsItemDict objectForKey:knewsTitle] 
                                                                                     subtitle:[newsItemDict objectForKey:knewsDesc] 
                                                                                     thumbURL:[newsItemDict objectForKey:knewsThumbImageUrl] 
                                                                                     imageURL:[newsItemDict objectForKey:knewsImageUrl] 
                                                                                          URL:[newsItemDict objectForKey:kMoreNewsUrl]
                                                                                         time:time
                                                                                         date:dateString]];
                                }
                            }
                        }
                    }
                }  
            }
            
            self.dataSource = [NewsDataSource newsDataSource];
        }
        else
        {
            NSString *str = [[newsDetailsResponse objectForKey:@"data"] objectForKey:@"message"];/*have to get error string*/
            
            UIAlertView *alert1=[[UIAlertView alloc]initWithTitle:nil message:str delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
            
            [alert1 show];
            
            [alert1 release];
        }
        
    }
}

- (void)didSelectObject:(id)object atIndexPath:(NSIndexPath *)indexPath{
    
    if (nil == newsDetailView) 
        newsDetailView = [[NewsDetailController alloc] init];
    
    newsDetailView.currentlySelectedNewsItem = [[[SharedObjects sharedInstance] newsArray] objectAtIndex:indexPath.row];
    
    [[self navigationController] pushViewController:newsDetailView animated:YES];
}

- (void) shareThis:(NSNotification*) notification {

    self.selectedNewsItem = [[notification userInfo] objectForKey:kNotificationShareKey];
    
    UIButton *button = (UIButton*)[notification object];

    if (nil != selectedNewsItem) {
        
        NSData *data = nil;
        
        NSMutableDictionary *shareParamsDict = nil;
        
        if ([[selectedNewsItem thumbImageUrl] length] > 0) {
            
            data = [NSData dataWithContentsOfURL:[NSURL URLWithString:[selectedNewsItem thumbImageUrl]]];
            
            if ([data length] > 0) {
                
                shareParamsDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                                   [selectedNewsItem title], @"name",
                                   @"Shared from Trisha Mobile App - News feeds", @"caption",
                                   [selectedNewsItem subTitle], @"description",
                                   data, @"picture",
                                   [selectedNewsItem url], @"link", nil];
            }
            else {
                
                shareParamsDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                                   [selectedNewsItem title], @"name",
                                   @"Shared from Trisha Mobile App - News feeds", @"caption",
                                   [selectedNewsItem subTitle], @"description",
                                   kAppIconLink, @"picture",
                                   [selectedNewsItem url], @"link", nil];
            }
        }
        else {
            
            shareParamsDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                               [selectedNewsItem title], @"name",
                               @"Shared from Trisha Mobile App - News feeds", @"caption",
                               [selectedNewsItem subTitle], @"description",
                               kAppIconLink, @"picture",
                               [selectedNewsItem url], @"link", nil];
        }
        
        
        [[NSNotificationCenter defaultCenter] postNotificationName:kFaceBookShareNotification 
                                                            object:button userInfo:shareParamsDict];

    }
}

- (void) tweetThis:(NSNotification*) notification {
    
    self.selectedNewsItem = [[notification userInfo] objectForKey:kNotificationShareKey];
    
    UIButton *button = (UIButton*)[notification object];
   
    NSMutableDictionary *shareParamsDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                                            [selectedNewsItem title], @"caption",
                                            [selectedNewsItem url], @"link",
                                            nil];
    
    [[NSNotificationCenter defaultCenter] postNotificationName:kTwitterShareNotification 
                                                        object:button userInfo:shareParamsDict];
}

- (void) dealloc {

    if (nil != selectedNewsItem) [selectedNewsItem release];
    if (nil != newsDetailView) [newsDetailView release];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:kshareVideoNotification object:nil];
    [[NSNotificationCenter defaultCenter] removeObserver:self name:ktweetVideoNotification object:nil];
    [super dealloc];
}

///////////////////////////////////////////////////////////////////////////////////////////////////
// UIViewController

- (void)loadView {
    [super loadView];
    
    self.tableView.rowHeight = kNewsTableCellHeight;
}

- (void)didReceiveMemoryWarning
{
    // Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
    
    // Release any cached data, images, etc that aren't in use.
}

#pragma mark - View lifecycle

/*
// Implement loadView to create a view hierarchy programmatically, without using a nib.
- (void)loadView
{
}
*/

/*
// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad
{
    [super viewDidLoad];
}
*/

- (void)viewDidUnload
{
    [super viewDidUnload];
    // Release any retained subviews of the main view.
    // e.g. self.myOutlet = nil;
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation
{
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

@end
